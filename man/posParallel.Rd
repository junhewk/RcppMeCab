% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/posParallel.R
\name{posParallel}
\alias{posParallel}
\title{parallel version of part-of-speech tagger}
\usage{
posParallel(sentence, join = TRUE, dict = "")
}
\arguments{
\item{sentence}{A character vector of any length. For analyzing multiple sentences, put them in one character vector.}

\item{join}{A bool to decide the output format. The default value is TRUE. If FALSE, the function will return morphemes only, and tags put in the attribute.}

\item{dict}{A location of user-specific MeCab dictionary. The default value is "".}
}
\value{
A string vector of POS tagged morpheme will be returned in conjoined character
 vecter form. Element name of the list are original phrases
}
\description{
\code{posParallel} returns part-of-speech (POS) tagged morpheme of the sentence.
}
\details{
This is a parallelized version of MeCab part-of-speech tagger. The function gets a
character vector of any length, and runs a loop inside C++ with Intel TBB to provide faster
processing.

Parallelizing over a character vector is not supported by \code{RcppParallel}.
Thus, this function makes duplicates of the input and the output.
Therefore, if your data volume is large, use \code{pos} or divide the vector to
several sub-vectors.

If you want to get a morpheme only, use join = False to put tag names on the attribute.
Basically the function will return a list of character vectors with (morpheme)/(tag) elements.
}
\examples{
\dontrun{
sentence <- c(#some UTF-8 texts)
posParallel(sentence)
posParallel(sentence, join = FALSE)
}

}
